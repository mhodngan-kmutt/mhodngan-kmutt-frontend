---
import Layout from '../../../../layouts/Layout.astro';
import { getProjects, getProjectBySlug } from '../../../../lib/api';
import i18n from '../../../../i18n/i18n';
import ExternalLinksSection from '@/components/projectDetail/ExternalLinksSection.astro';
import ContentSection from '@/components/projectDetail/ContentSection.astro';
import HeroSection from '@/components/projectDetail/HeroSection.astro';
import ContributorSection from '@/components/projectDetail/ContributorSection.astro';
import CertifySection from '@/components/projectDetail/CertifySection.astro';
import CommentSection from '@/components/projectDetail/CommentSection.astro';
import RelatedProjectSection from '@/components/projectDetail/RelatedProjectSection.astro';

// generate paths
export async function getStaticPaths() {
  const projects = await getProjects();
  const languages = ['en', 'th'];

  return projects.flatMap((p) =>
    languages.map((lang) => ({
      params: { slug: String(p.slug), lang },
    })),
  );
}

// load params and project
const { slug, lang } = Astro.params as { slug: string; lang: string };
const currentLang = lang === 'th' ? 'th' : 'en';
i18n.changeLanguage(currentLang);
const t = i18n.t.bind(i18n);

const project = await getProjectBySlug(slug);
---

<Layout title={project.title}>
  <HeroSection t={t} lang={lang} project={project} />
  <ContentSection t={t} lang={lang} project={project} />
  <ExternalLinksSection t={t} lang={lang} project={project} />
  <ContributorSection t={t} lang={lang} project={project} />
  <CertifySection t={t} lang={lang} project={project} />
  <CommentSection t={t} lang={lang} project={project} />
  <RelatedProjectSection t={t} lang={lang} project={project} />
</Layout>